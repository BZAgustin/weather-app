(()=>{"use strict";const t=new class{constructor(t,e,n,i,s,r,c,o,a,h,u,d,m,g,p=0){this._location=t,this._country=e,this._celsius=n,this._fahrenheit=i,this._time=s,this._windKph=r,this._windMph=c,this._windDir=o,this._precipMm=a,this._precipIn=h,this._humidity=u,this._clouds=d,this._isDay=m,this._condition=g,this._system=p}get location(){return this._location}set location(t){this._location=t}get country(){return this._country}set country(t){this._country=t}get celsius(){return this._celsius}set celsius(t){this._celsius=t}get fahrenheit(){return this._fahrenheit}set fahrenheit(t){this._fahrenheit=t}get time(){return this._time}set time(t){this._time=t}get windKph(){return this._windKph}set windKph(t){this._windKph=t}get windMph(){return this._windMph}set windMph(t){this._windMph=t}get windDir(){return this._windDir}set windDir(t){this._windDir=t}get precipMm(){return this._precipMm}set precipMm(t){this._precipMm=t}get precipIn(){return this._precipIn}set precipIn(t){this._precipIn=t}get humidity(){return this._humidity}set humidity(t){this._humidity=t}get clouds(){return this._clouds}set clouds(t){this._clouds=t}get isDay(){return this._isDay}set isDay(t){this._isDay=t}get condition(){return this._condition}set condition(t){this._condition=t}get system(){return this._system}set system(t){this._system=t}},e=(()=>{const t=document.getElementById("input-search"),e=document.getElementById("city"),n=document.getElementById("country"),i=document.getElementById("temperature"),s=document.getElementById("wind"),r=document.getElementById("humidity"),c=document.getElementById("precipitations"),o=document.getElementById("clouds"),a=document.getElementById("condition-text"),h=document.getElementById("country-time"),u=document.getElementById("toggle-system"),d=document.getElementById("error-message");return{inputSearch:t,toggleSystem:u,getInput:function(){return t.value},refresh:function(t,u,d,m,g,p,y,l,_){var w,E,f,M,I,S,D,W,L;w=t,e.innerHTML=w,E=u,n.innerHTML=E,f=d,i.innerHTML=f,M=m,h.innerHTML=M,I=g,s.innerHTML=I,S=p,c.innerHTML=S,D=y,r.innerHTML=D,W=l,o.innerHTML=W,L=_,a.innerHTML=L},showError:function(t){d.innerHTML="Location not found",console.log(t)},clearError:function(){d.innerHTML=""}}})(),n=(()=>{const t={day:"./assets/day.png",night:"./assets/night.png",north:"./assets/N.png",northEast:"./assets/NE.png",east:"./assets/E.png",southEast:"./assets/SE.png",south:"./assets/S.png",southWest:"./assets/SW.png",west:"./assets/W.png",northWest:"./assets/NW.png",toggleLeft:"./assets/toggleLeft.png",toggleRight:"./assets/toggleRight.png"},e=document.getElementById("daytime"),n=document.getElementById("wind-direction");return{myIcons:t,setDaytime:function(n){e.src=1===n?t.day:t.night},setWindDirection:function(e){switch(e){case"N":case"NNE":n.src=t.north;break;case"NE":case"ENE":n.src=t.northEast;break;case"E":case"ESE":n.src=t.east;break;case"SE":case"SSE":n.src=t.southEast;break;case"S":case"SSW":n.src=t.south;break;case"SW":case"WSW":n.src=t.southWest;break;case"W":case"WNW":n.src=t.west;break;case"NW":case"NNW":n.src=t.northWest;break;default:n.src=""}}}})();async function i(i){var s,r;await async function(n){try{const i=await async function(n){try{const t=await fetch(`http://api.weatherapi.com/v1/current.json?key=223244cbdba14658867150217233105&q=${n}`,{mode:"cors"});return await t.json()}catch(n){return e.showError(n),t}}(n),s=`${new Date(i.location.localtime).getHours().toString().padStart(2,"0")}:${new Date(i.location.localtime).getMinutes().toString().padStart(2,"0")}`;t.location=i.location.name,t.country=i.location.country,t.celsius=i.current.temp_c,t.time=s,t.fahrenheit=i.current.temp_f,t.windKph=i.current.wind_kph,t.windMph=i.current.wind_mph,t.windDir=i.current.wind_dir,t.precipMm=i.current.precip_mm,t.precipIn=i.current.precip_in,t.humidity=i.current.humidity,t.clouds=i.current.cloud,t.isDay=i.current.is_day,t.condition=i.current.condition.text,e.clearError()}catch(t){e.showError(t)}return null}(i),0===t.system?e.refresh(t.location,t.country,`${t.celsius}°C`,`${t.time} HS`,`${t.windKph} Km/H`,`${t.precipMm}mm`,`${t.humidity}%`,`${t.clouds}%`,`(${t.condition})`):e.refresh(t.location,t.country,`${t.fahrenheit}°F`,`${t.time} HS`,`${t.windMph} MPH`,`${t.precipIn}in`,`${t.humidity}%`,`${t.clouds}%`,`(${t.condition})`),s=t.isDay,r=t.windDir,n.setDaytime(s),n.setWindDirection(r)}i("Cordoba"),e.inputSearch.addEventListener("keypress",(t=>{"Enter"===t.key&&(t.preventDefault(),i(e.getInput()))})),e.toggleSystem.addEventListener("click",(()=>{0===t.system?(t.system=1,e.toggleSystem.src=n.myIcons.toggleRight):(t.system=0,e.toggleSystem.src=n.myIcons.toggleLeft),i(t.location)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWlCUE4sRUFBVWMsTUFqQkdnQyxFQWlCSTlDLEVBQVVTLFFBaEJ2Q29FLEVBQU1nQixXQUFXdkYsR0FDakJ1RSxFQUFNa0IsaUJBQWlCakQsRUFnQnpCLENBRUFtRCxFQUFXLFdBRVgsRUFBUXZELFlBQVlpRixpQkFBaUIsWUFBYUMsSUFDbkMsVUFBVkEsRUFBRUMsTUFDSEQsRUFBRUUsaUJBQ0Y3QixFQUFXLEVBQVE3QyxZQUNyQixJQUdGLEVBQVFGLGFBQWF5RSxpQkFBaUIsU0FBUyxLQUNyQixJQUFyQjNILEVBQVVnQixRQUNYaEIsRUFBVWdCLE9BQVMsRUFDbkIsRUFBUWtDLGFBQWE0QyxJQUFNakIsRUFBTUMsUUFBUVksY0FFekMxRixFQUFVZ0IsT0FBUyxFQUNuQixFQUFRa0MsYUFBYTRDLElBQU1qQixFQUFNQyxRQUFRVyxZQUczQ1EsRUFBV2pHLEVBQVVFLFNBQVMsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL2Rpc3BsYXkuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvd2VhdGhlci5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9pY29uTWFuYWdlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBET00gPSAoKSA9PiB7XG4gIGNvbnN0IGlucHV0U2VhcmNoID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2lucHV0LXNlYXJjaCcpO1xuICBjb25zdCBjaXR5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NpdHknKTtcbiAgY29uc3QgY291bnRyeSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjb3VudHJ5Jyk7XG4gIGNvbnN0IHRlbXBlcmF0dXJlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RlbXBlcmF0dXJlJyk7XG4gIGNvbnN0IHdpbmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd2luZCcpO1xuICBjb25zdCBodW1pZGl0eSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdodW1pZGl0eScpO1xuICBjb25zdCBwcmVjaXBpdGF0aW9ucyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwcmVjaXBpdGF0aW9ucycpO1xuICBjb25zdCBjbG91ZHMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2xvdWRzJyk7XG4gIGNvbnN0IGNvbmRpdGlvblRleHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY29uZGl0aW9uLXRleHQnKTtcbiAgY29uc3QgY291bnRyeVRpbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY291bnRyeS10aW1lJyk7XG4gIGNvbnN0IHRvZ2dsZVN5c3RlbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0b2dnbGUtc3lzdGVtJyk7XG4gIGNvbnN0IGVycm9yID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Vycm9yLW1lc3NhZ2UnKTtcblxuICBmdW5jdGlvbiBnZXRJbnB1dCgpIHtcbiAgICByZXR1cm4gaW5wdXRTZWFyY2gudmFsdWU7XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVDaXR5KG5ld0NpdHkpIHtcbiAgICBjaXR5LmlubmVySFRNTCA9IG5ld0NpdHk7XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVDb3VudHJ5KG5ld0NvdW50cnkpIHtcbiAgICBjb3VudHJ5LmlubmVySFRNTCA9IG5ld0NvdW50cnk7XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVUZW1wZXJhdHVyZShuZXdUZW1wKSB7XG4gICAgdGVtcGVyYXR1cmUuaW5uZXJIVE1MID0gbmV3VGVtcDtcbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZVdpbmQobmV3V2luZCkge1xuICAgIHdpbmQuaW5uZXJIVE1MID0gbmV3V2luZDtcbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZVByZWNpcGl0YXRpb25zKG5ld1ByZWNpcCkgeyBcbiAgICBwcmVjaXBpdGF0aW9ucy5pbm5lckhUTUwgPSBuZXdQcmVjaXA7XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVIdW1pZGl0eShuZXdIdW1pZGl0eSkge1xuICAgIGh1bWlkaXR5LmlubmVySFRNTCA9IG5ld0h1bWlkaXR5O1xuICB9XG5cbiAgZnVuY3Rpb24gdXBkYXRlQ2xvdWRzKG5ld0Nsb3Vkcykge1xuICAgIGNsb3Vkcy5pbm5lckhUTUwgPSBuZXdDbG91ZHM7XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVDb25kaXRpb24obmV3Q29uZGl0aW9uKSB7XG4gICAgY29uZGl0aW9uVGV4dC5pbm5lckhUTUwgPSBuZXdDb25kaXRpb247XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGVDb3VudHJ5VGltZShuZXdUaW1lKSB7XG4gICAgY291bnRyeVRpbWUuaW5uZXJIVE1MID0gbmV3VGltZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlZnJlc2gobXlDaXR5LCBteUNvdW50cnksIG15VGVtcCwgbXlUaW1lLCBteVdpbmQsIG15UHJlY3MsIG15SHVtaWRpdHksIG15Q2xvdWRzLCBteUNvbmRpdGlvbikge1xuICAgIHVwZGF0ZUNpdHkobXlDaXR5KTtcbiAgICB1cGRhdGVDb3VudHJ5KG15Q291bnRyeSk7XG4gICAgdXBkYXRlVGVtcGVyYXR1cmUobXlUZW1wKTtcbiAgICB1cGRhdGVDb3VudHJ5VGltZShteVRpbWUpO1xuICAgIHVwZGF0ZVdpbmQobXlXaW5kKTtcbiAgICB1cGRhdGVQcmVjaXBpdGF0aW9ucyhteVByZWNzKTtcbiAgICB1cGRhdGVIdW1pZGl0eShteUh1bWlkaXR5KTtcbiAgICB1cGRhdGVDbG91ZHMobXlDbG91ZHMpO1xuICAgIHVwZGF0ZUNvbmRpdGlvbihteUNvbmRpdGlvbik7XG4gIH1cblxuICBmdW5jdGlvbiBzaG93RXJyb3IoZXJyKSB7XG4gICAgZXJyb3IuaW5uZXJIVE1MID0gJ0xvY2F0aW9uIG5vdCBmb3VuZCdcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xuICB9XG5cbiAgZnVuY3Rpb24gY2xlYXJFcnJvcigpIHtcbiAgICBlcnJvci5pbm5lckhUTUwgPSAnJ1xuICB9XG5cbiAgcmV0dXJuIHsgaW5wdXRTZWFyY2gsIHRvZ2dsZVN5c3RlbSwgZ2V0SW5wdXQsIHJlZnJlc2gsIHNob3dFcnJvciwgY2xlYXJFcnJvciB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IERPTTsiLCJpbXBvcnQgV2VhdGhlciBmcm9tIFwiLi93ZWF0aGVyXCI7XG5pbXBvcnQgRE9NIGZyb20gXCIuL2Rpc3BsYXlcIjtcbmltcG9ydCBpY29uTWFuYWdlciBmcm9tIFwiLi9pY29uTWFuYWdlclwiO1xuXG5jb25zdCBteVdlYXRoZXIgPSBuZXcgV2VhdGhlcigpO1xuY29uc3QgZGlzcGxheSA9IERPTSgpO1xuY29uc3QgaWNvbnMgPSBpY29uTWFuYWdlcigpO1xuXG5hc3luYyBmdW5jdGlvbiBnZXRMb2NhdGlvbldlYXRoZXIobG9jYXRpb24pIHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwOi8vYXBpLndlYXRoZXJhcGkuY29tL3YxL2N1cnJlbnQuanNvbj9rZXk9MjIzMjQ0Y2JkYmExNDY1ODg2NzE1MDIxNzIzMzEwNSZxPSR7bG9jYXRpb259YCwge21vZGU6ICdjb3JzJ30pO1xuICAgIGNvbnN0IHdlYXRoZXIgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgICByZXR1cm4gd2VhdGhlcjtcbiAgfSBjYXRjaChlcnIpIHtcbiAgICBkaXNwbGF5LnNob3dFcnJvcihlcnIpO1xuICAgIHJldHVybiBteVdlYXRoZXI7XG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gdXBkYXRlV2VhdGhlcihsb2NhdGlvbikge1xuICB0cnkge1xuICAgIGNvbnN0IHdlYXRoZXJPYmplY3QgPSBhd2FpdCBnZXRMb2NhdGlvbldlYXRoZXIobG9jYXRpb24pO1xuICAgIGNvbnN0IGNvdW50cnlUaW1lID0gYCR7bmV3IERhdGUod2VhdGhlck9iamVjdC5sb2NhdGlvbi5sb2NhbHRpbWUpLmdldEhvdXJzKCkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfToke25ldyBEYXRlKHdlYXRoZXJPYmplY3QubG9jYXRpb24ubG9jYWx0aW1lKS5nZXRNaW51dGVzKCkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpfWA7XG5cbiAgICBteVdlYXRoZXIubG9jYXRpb24gPSB3ZWF0aGVyT2JqZWN0LmxvY2F0aW9uLm5hbWU7XG4gICAgbXlXZWF0aGVyLmNvdW50cnkgPSB3ZWF0aGVyT2JqZWN0LmxvY2F0aW9uLmNvdW50cnk7XG4gICAgbXlXZWF0aGVyLmNlbHNpdXMgPSB3ZWF0aGVyT2JqZWN0LmN1cnJlbnQudGVtcF9jO1xuICAgIG15V2VhdGhlci50aW1lID0gY291bnRyeVRpbWU7XG4gICAgbXlXZWF0aGVyLmZhaHJlbmhlaXQgPSB3ZWF0aGVyT2JqZWN0LmN1cnJlbnQudGVtcF9mO1xuICAgIG15V2VhdGhlci53aW5kS3BoID0gd2VhdGhlck9iamVjdC5jdXJyZW50LndpbmRfa3BoO1xuICAgIG15V2VhdGhlci53aW5kTXBoID0gd2VhdGhlck9iamVjdC5jdXJyZW50LndpbmRfbXBoO1xuICAgIG15V2VhdGhlci53aW5kRGlyID0gd2VhdGhlck9iamVjdC5jdXJyZW50LndpbmRfZGlyO1xuICAgIG15V2VhdGhlci5wcmVjaXBNbSA9IHdlYXRoZXJPYmplY3QuY3VycmVudC5wcmVjaXBfbW07XG4gICAgbXlXZWF0aGVyLnByZWNpcEluID0gd2VhdGhlck9iamVjdC5jdXJyZW50LnByZWNpcF9pbjtcbiAgICBteVdlYXRoZXIuaHVtaWRpdHkgPSB3ZWF0aGVyT2JqZWN0LmN1cnJlbnQuaHVtaWRpdHk7XG4gICAgbXlXZWF0aGVyLmNsb3VkcyA9IHdlYXRoZXJPYmplY3QuY3VycmVudC5jbG91ZDtcbiAgICBteVdlYXRoZXIuaXNEYXkgPSB3ZWF0aGVyT2JqZWN0LmN1cnJlbnQuaXNfZGF5O1xuICAgIG15V2VhdGhlci5jb25kaXRpb24gPSB3ZWF0aGVyT2JqZWN0LmN1cnJlbnQuY29uZGl0aW9uLnRleHQ7XG5cbiAgICBkaXNwbGF5LmNsZWFyRXJyb3IoKTtcbiAgfSBjYXRjaChlcnIpIHtcbiAgICBkaXNwbGF5LnNob3dFcnJvcihlcnIpO1xuICB9XG5yZXR1cm4gbnVsbDtcbn1cblxuZnVuY3Rpb24gdXBkYXRlSWNvbnModGltZSwgd2luZCkge1xuICBpY29ucy5zZXREYXl0aW1lKHRpbWUpO1xuICBpY29ucy5zZXRXaW5kRGlyZWN0aW9uKHdpbmQpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBuZXdXZWF0aGVyKG5ld0xvY2F0aW9uKSB7XG4gIGF3YWl0IHVwZGF0ZVdlYXRoZXIobmV3TG9jYXRpb24pO1xuICBpZihteVdlYXRoZXIuc3lzdGVtID09PSAwKSB7XG4gICAgZGlzcGxheS5yZWZyZXNoKG15V2VhdGhlci5sb2NhdGlvbiwgbXlXZWF0aGVyLmNvdW50cnksIGAke215V2VhdGhlci5jZWxzaXVzfcKwQ2AsIGAke215V2VhdGhlci50aW1lfSBIU2AsXG4gICAgYCR7bXlXZWF0aGVyLndpbmRLcGh9IEttL0hgLCBgJHtteVdlYXRoZXIucHJlY2lwTW19bW1gLCBgJHtteVdlYXRoZXIuaHVtaWRpdHl9JWAsIGAke215V2VhdGhlci5jbG91ZHN9JWAsIFxuICAgIGAoJHtteVdlYXRoZXIuY29uZGl0aW9ufSlgKTtcbiAgfSBlbHNlIHtcbiAgICBkaXNwbGF5LnJlZnJlc2gobXlXZWF0aGVyLmxvY2F0aW9uLCBteVdlYXRoZXIuY291bnRyeSwgYCR7bXlXZWF0aGVyLmZhaHJlbmhlaXR9wrBGYCwgYCR7bXlXZWF0aGVyLnRpbWV9IEhTYCxcbiAgICBgJHtteVdlYXRoZXIud2luZE1waH0gTVBIYCwgYCR7bXlXZWF0aGVyLnByZWNpcElufWluYCwgYCR7bXlXZWF0aGVyLmh1bWlkaXR5fSVgLCBgJHtteVdlYXRoZXIuY2xvdWRzfSVgLCBcbiAgICBgKCR7bXlXZWF0aGVyLmNvbmRpdGlvbn0pYCk7XG4gIH1cblxuICB1cGRhdGVJY29ucyhteVdlYXRoZXIuaXNEYXksIG15V2VhdGhlci53aW5kRGlyKTtcbn1cblxubmV3V2VhdGhlcignQ29yZG9iYScpO1xuXG5kaXNwbGF5LmlucHV0U2VhcmNoLmFkZEV2ZW50TGlzdGVuZXIoJ2tleXByZXNzJywgKGUpID0+IHtcbiAgaWYoZS5rZXkgPT09ICdFbnRlcicpIHtcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgbmV3V2VhdGhlcihkaXNwbGF5LmdldElucHV0KCkpO1xuICB9XG59KTtcblxuZGlzcGxheS50b2dnbGVTeXN0ZW0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIGlmKG15V2VhdGhlci5zeXN0ZW0gPT09IDApIHtcbiAgICBteVdlYXRoZXIuc3lzdGVtID0gMTtcbiAgICBkaXNwbGF5LnRvZ2dsZVN5c3RlbS5zcmMgPSBpY29ucy5teUljb25zLnRvZ2dsZVJpZ2h0O1xuICB9IGVsc2Uge1xuICAgIG15V2VhdGhlci5zeXN0ZW0gPSAwO1xuICAgIGRpc3BsYXkudG9nZ2xlU3lzdGVtLnNyYyA9IGljb25zLm15SWNvbnMudG9nZ2xlTGVmdDtcbiAgfVxuXG4gIG5ld1dlYXRoZXIobXlXZWF0aGVyLmxvY2F0aW9uKTtcbn0pO1xuIiwiLyogZXNsaW50LWRpc2FibGUgbm8tdW5kZXJzY29yZS1kYW5nbGUgKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFdlYXRoZXIge1xuICBjb25zdHJ1Y3Rvcihsb2NhdGlvbiwgY291bnRyeSwgY2Vsc2l1cywgZmFocmVuaGVpdCwgdGltZSwgd2luZEtwaCwgd2luZE1waCxcbiAgICAgICAgICAgICAgd2luZERpciwgcHJlY2lwTW0sIHByZWNpcEluLCBodW1pZGl0eSwgY2xvdWRzLCBpc0RheSwgY29uZGl0aW9uLCBzeXN0ZW0gPSAwKSB7XG5cbiAgICB0aGlzLl9sb2NhdGlvbiA9IGxvY2F0aW9uO1xuICAgIHRoaXMuX2NvdW50cnkgPSBjb3VudHJ5O1xuICAgIHRoaXMuX2NlbHNpdXMgPSBjZWxzaXVzO1xuICAgIHRoaXMuX2ZhaHJlbmhlaXQgPSBmYWhyZW5oZWl0O1xuICAgIHRoaXMuX3RpbWUgPSB0aW1lO1xuICAgIHRoaXMuX3dpbmRLcGggPSB3aW5kS3BoO1xuICAgIHRoaXMuX3dpbmRNcGggPSB3aW5kTXBoO1xuICAgIHRoaXMuX3dpbmREaXIgPSB3aW5kRGlyO1xuICAgIHRoaXMuX3ByZWNpcE1tID0gcHJlY2lwTW07XG4gICAgdGhpcy5fcHJlY2lwSW4gPSBwcmVjaXBJbjtcbiAgICB0aGlzLl9odW1pZGl0eSA9IGh1bWlkaXR5O1xuICAgIHRoaXMuX2Nsb3VkcyA9IGNsb3VkcztcbiAgICB0aGlzLl9pc0RheSA9IGlzRGF5O1xuICAgIHRoaXMuX2NvbmRpdGlvbiA9IGNvbmRpdGlvbjtcbiAgICB0aGlzLl9zeXN0ZW0gPSBzeXN0ZW07XG4gIH1cblxuICBnZXQgbG9jYXRpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX2xvY2F0aW9uO1xuICB9XG5cbiAgc2V0IGxvY2F0aW9uKG5ld0xvY2F0aW9uKSB7XG4gICAgdGhpcy5fbG9jYXRpb24gPSBuZXdMb2NhdGlvbjtcbiAgfVxuXG4gIGdldCBjb3VudHJ5KCkge1xuICAgIHJldHVybiB0aGlzLl9jb3VudHJ5XG4gIH1cblxuICBzZXQgY291bnRyeShuZXdDb3VudHJ5KSB7XG4gICAgdGhpcy5fY291bnRyeSA9IG5ld0NvdW50cnk7XG4gIH1cblxuICBnZXQgY2Vsc2l1cygpIHtcbiAgICByZXR1cm4gdGhpcy5fY2Vsc2l1c1xuICB9XG5cbiAgc2V0IGNlbHNpdXModGVtcGVyYXR1cmUpIHtcbiAgICB0aGlzLl9jZWxzaXVzID0gdGVtcGVyYXR1cmU7XG4gIH1cblxuICBnZXQgZmFocmVuaGVpdCgpIHtcbiAgICByZXR1cm4gdGhpcy5fZmFocmVuaGVpdFxuICB9XG5cbiAgc2V0IGZhaHJlbmhlaXQodGVtcGVyYXR1cmUpIHtcbiAgICB0aGlzLl9mYWhyZW5oZWl0ID0gdGVtcGVyYXR1cmU7XG4gIH1cblxuICBnZXQgdGltZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fdGltZTtcbiAgfVxuXG4gIHNldCB0aW1lKG5ld1RpbWUpIHtcbiAgICB0aGlzLl90aW1lID0gbmV3VGltZTtcbiAgfVxuXG4gIGdldCB3aW5kS3BoKCkge1xuICAgIHJldHVybiB0aGlzLl93aW5kS3BoXG4gIH1cbiAgXG4gIHNldCB3aW5kS3BoKHNwZWVkKSB7XG4gICAgdGhpcy5fd2luZEtwaCA9IHNwZWVkO1xuICB9XG5cbiAgZ2V0IHdpbmRNcGgoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3dpbmRNcGhcbiAgfVxuXG4gIHNldCB3aW5kTXBoKHNwZWVkKSB7XG4gICAgdGhpcy5fd2luZE1waCA9IHNwZWVkO1xuICB9XG5cbiAgZ2V0IHdpbmREaXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3dpbmREaXJcbiAgfVxuXG4gIHNldCB3aW5kRGlyKGRpcmVjdGlvbikge1xuICAgIHRoaXMuX3dpbmREaXIgPSBkaXJlY3Rpb247XG4gIH1cbiAgXG4gIGdldCBwcmVjaXBNbSgpIHtcbiAgICByZXR1cm4gdGhpcy5fcHJlY2lwTW1cbiAgfVxuXG4gIHNldCBwcmVjaXBNbShhbW91bnQpIHtcbiAgICB0aGlzLl9wcmVjaXBNbSA9IGFtb3VudDtcbiAgfVxuXG4gIGdldCBwcmVjaXBJbigpIHtcbiAgICByZXR1cm4gdGhpcy5fcHJlY2lwSW5cbiAgfVxuXG4gIHNldCBwcmVjaXBJbihhbW91bnQpIHtcbiAgICB0aGlzLl9wcmVjaXBJbiA9IGFtb3VudDtcbiAgfVxuXG4gIGdldCBodW1pZGl0eSgpIHtcbiAgICByZXR1cm4gdGhpcy5faHVtaWRpdHlcbiAgfVxuXG4gIHNldCBodW1pZGl0eShwZXJjZW50YWdlKSB7XG4gICAgdGhpcy5faHVtaWRpdHkgPSBwZXJjZW50YWdlO1xuICB9XG5cbiAgZ2V0IGNsb3VkcygpIHtcbiAgICByZXR1cm4gdGhpcy5fY2xvdWRzXG4gIH1cblxuICBzZXQgY2xvdWRzKGFtb3VudCkge1xuICAgIHRoaXMuX2Nsb3VkcyA9IGFtb3VudDtcbiAgfVxuXG4gIGdldCBpc0RheSgpIHtcbiAgICByZXR1cm4gdGhpcy5faXNEYXk7XG4gIH1cblxuICBzZXQgaXNEYXkodGltZSkge1xuICAgIHRoaXMuX2lzRGF5ID0gdGltZTtcbiAgfVxuXG4gIGdldCBjb25kaXRpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX2NvbmRpdGlvbjtcbiAgfVxuXG4gIHNldCBjb25kaXRpb24oY29uZGl0aW9uKSB7XG4gICAgdGhpcy5fY29uZGl0aW9uID0gY29uZGl0aW9uO1xuICB9XG5cbiAgZ2V0IHN5c3RlbSgpIHtcbiAgICByZXR1cm4gdGhpcy5fc3lzdGVtO1xuICB9XG5cbiAgc2V0IHN5c3RlbShuZXdTeXN0ZW0pIHtcbiAgICB0aGlzLl9zeXN0ZW0gPSBuZXdTeXN0ZW07XG4gIH1cbn0iLCJjb25zdCBpY29uTWFuYWdlciA9ICgpID0+IHtcbiAgY29uc3QgbXlJY29ucyA9IHtcbiAgICBkYXk6ICcuL2Fzc2V0cy9kYXkucG5nJyxcbiAgICBuaWdodDogJy4vYXNzZXRzL25pZ2h0LnBuZycsXG4gICAgbm9ydGg6ICcuL2Fzc2V0cy9OLnBuZycsXG4gICAgbm9ydGhFYXN0OiAnLi9hc3NldHMvTkUucG5nJyxcbiAgICBlYXN0OiAnLi9hc3NldHMvRS5wbmcnLFxuICAgIHNvdXRoRWFzdDogJy4vYXNzZXRzL1NFLnBuZycsXG4gICAgc291dGg6ICcuL2Fzc2V0cy9TLnBuZycsXG4gICAgc291dGhXZXN0OiAnLi9hc3NldHMvU1cucG5nJyxcbiAgICB3ZXN0OiAnLi9hc3NldHMvVy5wbmcnLFxuICAgIG5vcnRoV2VzdDogJy4vYXNzZXRzL05XLnBuZycsXG4gICAgdG9nZ2xlTGVmdDogJy4vYXNzZXRzL3RvZ2dsZUxlZnQucG5nJyxcbiAgICB0b2dnbGVSaWdodDogJy4vYXNzZXRzL3RvZ2dsZVJpZ2h0LnBuZydcbiAgfVxuXG4gIGNvbnN0IGRheXRpbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGF5dGltZScpO1xuICBjb25zdCB3aW5kRGlyZWN0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3dpbmQtZGlyZWN0aW9uJyk7XG5cbiAgZnVuY3Rpb24gc2V0RGF5dGltZSh0aW1lKSB7XG4gICAgaWYodGltZSA9PT0gMSkge1xuICAgICAgZGF5dGltZS5zcmMgPSBteUljb25zLmRheTtcbiAgICB9IGVsc2Uge1xuICAgICAgZGF5dGltZS5zcmMgPSBteUljb25zLm5pZ2h0O1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHNldFdpbmREaXJlY3Rpb24oZGlyZWN0aW9uKSB7XG4gICAgc3dpdGNoKGRpcmVjdGlvbikge1xuICAgICAgY2FzZSAnTicgOlxuICAgICAgICB3aW5kRGlyZWN0aW9uLnNyYyA9IG15SWNvbnMubm9ydGg7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnTk5FJzpcbiAgICAgICAgd2luZERpcmVjdGlvbi5zcmMgPSBteUljb25zLm5vcnRoO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ05FJzpcbiAgICAgICAgd2luZERpcmVjdGlvbi5zcmMgPSBteUljb25zLm5vcnRoRWFzdDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdFTkUnOlxuICAgICAgICB3aW5kRGlyZWN0aW9uLnNyYyA9IG15SWNvbnMubm9ydGhFYXN0O1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ0UnOlxuICAgICAgICB3aW5kRGlyZWN0aW9uLnNyYyA9IG15SWNvbnMuZWFzdDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdFU0UnOlxuICAgICAgICB3aW5kRGlyZWN0aW9uLnNyYyA9IG15SWNvbnMuZWFzdDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdTRSc6XG4gICAgICAgIHdpbmREaXJlY3Rpb24uc3JjID0gbXlJY29ucy5zb3V0aEVhc3Q7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnU1NFJzpcbiAgICAgICAgd2luZERpcmVjdGlvbi5zcmMgPSBteUljb25zLnNvdXRoRWFzdDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdTJzpcbiAgICAgICAgd2luZERpcmVjdGlvbi5zcmMgPSBteUljb25zLnNvdXRoO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ1NTVyc6XG4gICAgICAgIHdpbmREaXJlY3Rpb24uc3JjID0gbXlJY29ucy5zb3V0aDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdTVyc6XG4gICAgICAgIHdpbmREaXJlY3Rpb24uc3JjID0gbXlJY29ucy5zb3V0aFdlc3Q7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnV1NXJzpcbiAgICAgICAgd2luZERpcmVjdGlvbi5zcmMgPSBteUljb25zLnNvdXRoV2VzdDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdXJzpcbiAgICAgICAgd2luZERpcmVjdGlvbi5zcmMgPSBteUljb25zLndlc3Q7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnV05XJzpcbiAgICAgICAgd2luZERpcmVjdGlvbi5zcmMgPSBteUljb25zLndlc3Q7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnTlcnOlxuICAgICAgICB3aW5kRGlyZWN0aW9uLnNyYyA9IG15SWNvbnMubm9ydGhXZXN0O1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ05OVyc6XG4gICAgICAgIHdpbmREaXJlY3Rpb24uc3JjID0gbXlJY29ucy5ub3J0aFdlc3Q7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgd2luZERpcmVjdGlvbi5zcmMgPSAnJztcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHsgbXlJY29ucywgc2V0RGF5dGltZSwgc2V0V2luZERpcmVjdGlvbiB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGljb25NYW5hZ2VyOyJdLCJuYW1lcyI6WyJteVdlYXRoZXIiLCJjb25zdHJ1Y3RvciIsImxvY2F0aW9uIiwiY291bnRyeSIsImNlbHNpdXMiLCJmYWhyZW5oZWl0IiwidGltZSIsIndpbmRLcGgiLCJ3aW5kTXBoIiwid2luZERpciIsInByZWNpcE1tIiwicHJlY2lwSW4iLCJodW1pZGl0eSIsImNsb3VkcyIsImlzRGF5IiwiY29uZGl0aW9uIiwic3lzdGVtIiwidGhpcyIsIl9sb2NhdGlvbiIsIl9jb3VudHJ5IiwiX2NlbHNpdXMiLCJfZmFocmVuaGVpdCIsIl90aW1lIiwiX3dpbmRLcGgiLCJfd2luZE1waCIsIl93aW5kRGlyIiwiX3ByZWNpcE1tIiwiX3ByZWNpcEluIiwiX2h1bWlkaXR5IiwiX2Nsb3VkcyIsIl9pc0RheSIsIl9jb25kaXRpb24iLCJfc3lzdGVtIiwibmV3TG9jYXRpb24iLCJuZXdDb3VudHJ5IiwidGVtcGVyYXR1cmUiLCJuZXdUaW1lIiwic3BlZWQiLCJkaXJlY3Rpb24iLCJhbW91bnQiLCJwZXJjZW50YWdlIiwibmV3U3lzdGVtIiwiaW5wdXRTZWFyY2giLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiY2l0eSIsIndpbmQiLCJwcmVjaXBpdGF0aW9ucyIsImNvbmRpdGlvblRleHQiLCJjb3VudHJ5VGltZSIsInRvZ2dsZVN5c3RlbSIsImVycm9yIiwiZ2V0SW5wdXQiLCJ2YWx1ZSIsInJlZnJlc2giLCJteUNpdHkiLCJteUNvdW50cnkiLCJteVRlbXAiLCJteVRpbWUiLCJteVdpbmQiLCJteVByZWNzIiwibXlIdW1pZGl0eSIsIm15Q2xvdWRzIiwibXlDb25kaXRpb24iLCJuZXdDaXR5IiwibmV3VGVtcCIsIm5ld1dpbmQiLCJuZXdQcmVjaXAiLCJuZXdIdW1pZGl0eSIsIm5ld0Nsb3VkcyIsIm5ld0NvbmRpdGlvbiIsImlubmVySFRNTCIsInNob3dFcnJvciIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJjbGVhckVycm9yIiwiaWNvbnMiLCJteUljb25zIiwiZGF5IiwibmlnaHQiLCJub3J0aCIsIm5vcnRoRWFzdCIsImVhc3QiLCJzb3V0aEVhc3QiLCJzb3V0aCIsInNvdXRoV2VzdCIsIndlc3QiLCJub3J0aFdlc3QiLCJ0b2dnbGVMZWZ0IiwidG9nZ2xlUmlnaHQiLCJkYXl0aW1lIiwid2luZERpcmVjdGlvbiIsInNldERheXRpbWUiLCJzcmMiLCJzZXRXaW5kRGlyZWN0aW9uIiwiYXN5bmMiLCJuZXdXZWF0aGVyIiwid2VhdGhlck9iamVjdCIsInJlc3BvbnNlIiwiZmV0Y2giLCJtb2RlIiwianNvbiIsImdldExvY2F0aW9uV2VhdGhlciIsIkRhdGUiLCJsb2NhbHRpbWUiLCJnZXRIb3VycyIsInRvU3RyaW5nIiwicGFkU3RhcnQiLCJnZXRNaW51dGVzIiwibmFtZSIsImN1cnJlbnQiLCJ0ZW1wX2MiLCJ0ZW1wX2YiLCJ3aW5kX2twaCIsIndpbmRfbXBoIiwid2luZF9kaXIiLCJwcmVjaXBfbW0iLCJwcmVjaXBfaW4iLCJjbG91ZCIsImlzX2RheSIsInRleHQiLCJ1cGRhdGVXZWF0aGVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJrZXkiLCJwcmV2ZW50RGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=